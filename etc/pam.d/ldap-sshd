# PAM configuration for the CNC Secure Shell service
# 290911 - MAM
# CNC-ssh LDAP authentication.
# here are the per-package modules (the "Primary" block)
auth	[success=2 default=ignore]	pam_unix.so nullok_secure
auth	[success=1 default=ignore]	pam_ldap.so use_first_pass
# here's the fallback if no module succeeds
auth	requisite			pam_deny.so
account     [default=bad success=ok user_unknown=ignore] pam_ldap.so

# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth	required			pam_permit.so

# Disallow non-root logins when /etc/nologin exists.
account    required     pam_nologin.so

# CNC-ssh LDAP authorization.
account	[success=1 default=ignore]	pam_ldap.so 
# here's the fallback if no module succeeds
account	requisite			pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
account	required			pam_permit.so

session	[default=1]			pam_permit.so

# here's the fallback if no module succeeds
session	requisite			pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
session	required			pam_permit.so

# CNC-ssh LDAP session setup and teardown.
session	required			pam_ldap.so 

# Print the status of the user's mailbox upon successful login.
session    optional     pam_mail.so standard noenv # [1]

# Create a home directory
session     optional      pam_mkhomedir.so

# Set up user limits from /etc/security/limits.conf.
session    required     pam_limits.so

# CNC ssh Un*x password updating.
password	[success=1 default=ignore]	pam_ldap.so try_first_pass
password    sufficient    pam_ldap.so use_authtok

# here's the fallback if no module succeeds
password	requisite			pam_deny.so

# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
password	required			pam_permit.so

# and here are more per-package modules (the "Additional" block)
